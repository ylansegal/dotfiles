#!/usr/bin/env ruby

require "bundler/inline"

gemfile do
  source "https://rubygems.org"
  gem "git"
end

require "net/http"
require "json"
require "yaml"

# Read token /Users/ylans/.config/hub
token = YAML.safe_load(File.read(File.join(Dir.home, ".config", "hub")))["github.com"].first["oauth_token"]

owner, repo = Git.open(".").remotes.first.url.match(%r{git@github.com:(.*)/(.*).git}).captures

query = <<~GRAPHQL
  query {
    repository(owner: \"#{owner}\", name: \"#{repo}\") {
      defaultBranchRef {
        target {
          ... on Commit {
            history(first: 50) {
              nodes {
                oid
                status {
                  state
                }
              }
            }
          }
        }
      }
    }
  }
GRAPHQL

github_url = URI("https://api.github.com/graphql")
headers = { "Authorization" => "bearer #{token}" }
body = { query: query }.to_json

response = JSON.parse(Net::HTTP.post(github_url, body, headers).body)
nodes = response["data"]["repository"]["defaultBranchRef"]["target"]["history"]["nodes"]

last_build = nodes.find { |node| node["status"]["state"] == "SUCCESS" }

if last_build
  puts last_build["oid"]
else
  exit 1
end
